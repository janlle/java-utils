server:
  port: 8085
  servlet:
    path: /
app:
  config:
    redis:
      username: root
      password: root;
      url: localhost:6379
      timeout: 3600
      port: 6379
      host: localhost
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/boot?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    spring.datasource.filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: true
    open-in-view: false


  # thymeleaf 配置
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    servlet:
      content-type: text/html
    enabled: true
    encoding: UTF-8
    mode: HTML

  # rabbitmq 配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: cloud
    password: cloud
    virtual-host: /mc

  logging:
    level:
      org:
        apache:
          http: info

  # redis 配置
  redis:
    database: 2
    timeout: 10000ms
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        # 最大连接数
        max-active: 8
        # 最大阻塞等待时间(负数表示没限制)
        max-wait: -1ms
        # 最大空闲
        max-idle: 8
        # 最小空闲
        min-idle: 0

# mybatis 配置
mybatis:
  configuration:
    # 全局映射器启用缓存
    cache-enabled: false
    # 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。
    aggressive-lazy-loading: false
    # 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载
    lazy-loading-enabled: false
    # 对于批量更新操作缓存SQL以提高性能
    default-executor-type: reuse
    # 允许返回不同的结果集以达到通用的效果
    multiple-result-sets-enabled: true
    # 数据库执行超时时间
    default-statement-timeout: 25000
    # 打印sql语句
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false
    use-generated-keys: true
    # 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型
    jdbc-type-for-null: null
    # 使用驼峰命名法转换字段
    map-underscore-to-camel-case: true
    # 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
    auto-mapping-behavior: partial
    # 是否可以使用列的别名 (取决于驱动的兼容性) default:true
    use-column-label: true
    # 指定 Mybatis 创建具有延迟加载能力的对象所用到的代理工具。CGLIB|JAVASSIST, default(JAVASSIST)
    # proxy-factory: CGLIB
    # 指定 MyBatis 增加到日志名称的前缀。任何字符串
    log-prefix: test
  mapper-locations: classpath:mybatis/mappers/*.xml
  type-aliases-package: com.andy.seckill.domain
  executor-type: reuse